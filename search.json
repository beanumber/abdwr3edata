[{"path":[]},{"path":"https://beanumber.github.io/abdwr3edata/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://beanumber.github.io/abdwr3edata/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://beanumber.github.io/abdwr3edata/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Benjamin S. Baumer. Author. Jim Albert. Author, maintainer.","code":""},{"path":"https://beanumber.github.io/abdwr3edata/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Baumer B, Albert J (2024). abdwr3edata: Companion 'Analyzing Baseball Data R', 3rd edition. R package version 0.0.3, https://beanumber.github.io/abdwr3edata/, https://github.com/beanumber/abdwr3edata.","code":"@Manual{,   title = {abdwr3edata: Companion to 'Analyzing Baseball Data with R', 3rd edition},   author = {Benjamin S. Baumer and Jim Albert},   year = {2024},   note = {R package version 0.0.3, https://beanumber.github.io/abdwr3edata/},   url = {https://github.com/beanumber/abdwr3edata}, }"},{"path":"https://beanumber.github.io/abdwr3edata/index.html","id":"abdwr3edata","dir":"","previous_headings":"","what":"Companion to Analyzing Baseball Data with R, 3rd edition","title":"Companion to Analyzing Baseball Data with R, 3rd edition","text":"goal abdwr3edata facilitate computations made 3rd edition Analyzing Baseball Data R.","code":""},{"path":"https://beanumber.github.io/abdwr3edata/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Companion to Analyzing Baseball Data with R, 3rd edition","text":"can install development version abdwr3edata GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"beanumber/abdwr3edata\")"},{"path":"https://beanumber.github.io/abdwr3edata/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Companion to Analyzing Baseball Data with R, 3rd edition","text":"Compare mean batting average events passed 1-1 count didn’t.","code":"library(dplyr) library(abdwr3edata) retro2016 |>   retrosheet_add_counts() |>   group_by(c11) |>   summarize(     num_events = n(),     num_batters = n_distinct(bat_id),     num_pitchers = n_distinct(pit_id),     mean_ba = sum(h_fl) / sum(ab_fl)   ) #> # A tibble: 2 × 5 #>   c11   num_events num_batters num_pitchers mean_ba #>   <lgl>      <int>       <int>        <int>   <dbl> #> 1 FALSE     115487         937          741   0.443 #> 2 TRUE       75226         888          737   0.379"},{"path":"https://beanumber.github.io/abdwr3edata/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Companion to Analyzing Baseball Data with R, 3rd edition","text":"","code":"citation(\"abdwr3edata\") #> To cite package 'abdwr3edata' in publications use: #>  #>   Baumer B, Albert J (2024). _abdwr3edata: Companion to 'Analyzing #>   Baseball Data with R', 3rd edition_. R package version 0.0.2, #>   <https://github.com/beanumber/abdwr3edata>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {abdwr3edata: Companion to 'Analyzing Baseball Data with R', 3rd edition}, #>     author = {Benjamin S. Baumer and Jim Albert}, #>     year = {2024}, #>     note = {R package version 0.0.2}, #>     url = {https://github.com/beanumber/abdwr3edata}, #>   }"},{"path":"https://beanumber.github.io/abdwr3edata/reference/NLbatting.html","id":null,"dir":"Reference","previous_headings":"","what":"American and National League statistics — NLbatting","title":"American and National League statistics — NLbatting","text":"American National League statistics","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/NLbatting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"American and National League statistics — NLbatting","text":"","code":"NLbatting  ALbatting  NLpitching"},{"path":"https://beanumber.github.io/abdwr3edata/reference/NLbatting.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"American and National League statistics — NLbatting","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 16 rows 28 columns. object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 14 rows 28 columns. object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 16 rows 34 columns.","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/compareTrajectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny app for comparing player trajectories — compareTrajectories","title":"Shiny app for comparing player trajectories — compareTrajectories","text":"Shiny app comparing player trajectories","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/compareTrajectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny app for comparing player trajectories — compareTrajectories","text":"","code":"compareTrajectories()  selectPlayers2(midYearRange, minIP)  compare_plot(playerid_1, playerid_2, measure, xvar)"},{"path":"https://beanumber.github.io/abdwr3edata/reference/compareTrajectories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny app for comparing player trajectories — compareTrajectories","text":"midYearRange numeric vector giving range possible years minIP minimum number innings pitched (IP) considered group. playerid_1 Lahman ID first player playerid_2 Lahman ID second player measure Name measure pitching performance compared. Must one : \"ERA\", \"FIP\", \"WHIP\", \"Rate\", \"BB Rate\" xvar Name variable x-axis. Must either \"age\" \"year\"","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/compareTrajectories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny app for comparing player trajectories — compareTrajectories","text":"Shiny app","code":""},{"path":[]},{"path":"https://beanumber.github.io/abdwr3edata/reference/compareTrajectories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny app for comparing player trajectories — compareTrajectories","text":"","code":"if (FALSE) {   compareTrajectories() }"},{"path":"https://beanumber.github.io/abdwr3edata/reference/dimaggio_1941.html","id":null,"dir":"Reference","previous_headings":"","what":"Joe DiMaggio's 1941 season — dimaggio_1941","title":"Joe DiMaggio's 1941 season — dimaggio_1941","text":"Joe DiMaggio's 1941 season","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/dimaggio_1941.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joe DiMaggio's 1941 season — dimaggio_1941","text":"","code":"dimaggio_1941"},{"path":"https://beanumber.github.io/abdwr3edata/reference/dimaggio_1941.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Joe DiMaggio's 1941 season — dimaggio_1941","text":"object class tbl_df (inherits tbl, data.frame) 139 rows 38 columns.","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/download_retrosheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Retrosheet play-by-play files — download_retrosheet","title":"Download Retrosheet play-by-play files — download_retrosheet","text":"Legacy functions 2nd edition Analyzing Baseball Data R. functions superseded baseballr::retrosheet_data(). Please use functions instead new work. functions preserved edification.","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/download_retrosheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Retrosheet play-by-play files — download_retrosheet","text":"","code":"download_retrosheet(season)  unzip_retrosheet(season)  create_csv_file(season)  create_csv_roster(season)  cleanup()  parse_retrosheet_pbp(season)"},{"path":"https://beanumber.github.io/abdwr3edata/reference/download_retrosheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Retrosheet play-by-play files — download_retrosheet","text":"season Season download","code":""},{"path":[]},{"path":"https://beanumber.github.io/abdwr3edata/reference/hof_batting.html","id":null,"dir":"Reference","previous_headings":"","what":"Hall of Fame batting — hof_batting","title":"Hall of Fame batting — hof_batting","text":"Hall Fame batting","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/hof_batting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hall of Fame batting — hof_batting","text":"","code":"hof_batting  hof_pitching"},{"path":"https://beanumber.github.io/abdwr3edata/reference/hof_batting.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hall of Fame batting — hof_batting","text":"object class tbl_df (inherits tbl, data.frame) 167 rows 46 columns. object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 70 rows 30 columns.","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/hr_rates.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute home run rates — hr_rates","title":"Compute home run rates — hr_rates","text":"Compute home run rates","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/hr_rates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute home run rates — hr_rates","text":"","code":"hr_rates(age, hr, ab)"},{"path":"https://beanumber.github.io/abdwr3edata/reference/hr_rates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute home run rates — hr_rates","text":"age Age player hr Number home runs ab Number -bats","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/hr_rates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute home run rates — hr_rates","text":"list two elements: x: age player y: number home runs per 100 -bats","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/hr_rates.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute home run rates — hr_rates","text":"https://beanumber.github.io/abdwr3e/02-intro.html#sec-rfunctions","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/hr_rates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute home run rates — hr_rates","text":"","code":"hr_rates(35, 4, 200) #> $x #> [1] 35 #>  #> $y #> [1] 2 #>"},{"path":"https://beanumber.github.io/abdwr3edata/reference/macros.html","id":null,"dir":"Reference","previous_headings":"","what":"Replacements for LaTeX macros — macros","title":"Replacements for LaTeX macros — macros","text":"Replacements LaTeX macros","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/macros.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replacements for LaTeX macros — macros","text":"","code":"func(x, ...)  sql_func(x)  sql_word(x)  argument(x)  variable(x)  pkg(x, ...)  person(x, ...)  vocab(x, ...)  index_entry(   index_label = \"subject\",   x,   emph = FALSE,   index = TRUE,   .f = NULL,   alt = NULL )"},{"path":"https://beanumber.github.io/abdwr3edata/reference/macros.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replacements for LaTeX macros — macros","text":"x text wrap macro ... arguments passed index_entry index_label name index emph Display LaTeX entry italics index add LaTeX indexing? .f function apply x indexing alt alternate character string use indexing","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/macros.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replacements for LaTeX macros — macros","text":"","code":"func(\"mutate\") #> [1] \"\\\\index[R]{mutate()}`mutate()`\" func(\"mutate\", index = FALSE) #> [1] \"`mutate()`\" func(\"left_join\") #> [1] \"\\\\index[R]{left\\\\_join()}`left_join()`\" pkg(\"dplyr\") #> [1] \"\\\\index[R]{library(dplyr)}**dplyr**\" person(\"Ben Baumer\") #> [1] \"\\\\index[subject]{Baumer, Ben}[Ben Baumer](https://en.wikipedia.org/w/index.php?search=Ben Baumer)\" person(\"Ben Baumer\", emph = TRUE) #> [1] \"\\\\index[subject]{Baumer, Ben@\\\\emph{Baumer, Ben}}[Ben Baumer](https://en.wikipedia.org/w/index.php?search=Ben Baumer)\" person(\"Richard De Veaux\") #> [1] \"\\\\index[subject]{Richard De Veaux}[Richard De Veaux](https://en.wikipedia.org/w/index.php?search=Richard De Veaux)\" person(\"Richard De Veaux\", alt = \"De Veaux, Richard\") #> [1] \"\\\\index[subject]{De Veaux, Richard}[Richard De Veaux](https://en.wikipedia.org/w/index.php?search=Richard De Veaux)\" vocab(x = \"Big data\", .f = tolower) #> [1] \"\\\\index[subject]{big data}[*Big data*](https://en.wikipedia.org/w/index.php?search=Big data)\" index_entry(x = \"Barack Obama\") #> [1] \"\\\\index[subject]{Barack Obama}\" index_entry(x = \"Barack Obama\", index = FALSE) index_entry(x = \"Big data\", .f = tolower) #> [1] \"\\\\index[subject]{big data}\" index_entry(x = \"Twilight\", emph = TRUE) #> [1] \"\\\\index[subject]{Twilight@\\\\emph{Twilight}}\" index_entry(x = \"Richard De Veaux\", alt = \"De Veaux, Richard\") #> [1] \"\\\\index[subject]{De Veaux, Richard}\" index_entry(x = \"left_join\") #> [1] \"\\\\index[subject]{left\\\\_join}\""},{"path":"https://beanumber.github.io/abdwr3edata/reference/one_simulation_68.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate one season from 1968 — one_simulation_68","title":"Simulate one season from 1968 — one_simulation_68","text":"Simulate one season 1968","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/one_simulation_68.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate one season from 1968 — one_simulation_68","text":"","code":"one_simulation_68(s.talent = 0.2)"},{"path":"https://beanumber.github.io/abdwr3edata/reference/one_simulation_68.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate one season from 1968 — one_simulation_68","text":"s.talent Proportion talent (vs. luck)","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/one_simulation_68.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate one season from 1968 — one_simulation_68","text":"tbl 20 rows (one team). call function simulates one random season 1968.","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/one_simulation_68.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate one season from 1968 — one_simulation_68","text":"","code":"one_simulation_68() #> # A tibble: 20 × 6 #>    Team   Wins League   Talent Winner.Lg Winner.WS #>    <chr> <int>  <dbl>    <dbl>     <dbl>     <dbl> #>  1 NYN      98      1  0.230           1         0 #>  2 LAN      97      1  0.124           0         0 #>  3 SFN      83      1 -0.0488          0         0 #>  4 PIT      82      1 -0.0495          0         0 #>  5 SLN      82      1 -0.0565          0         0 #>  6 CHN      81      1  0.0511          0         0 #>  7 HOU      81      1 -0.00111         0         0 #>  8 CIN      70      1 -0.487           0         0 #>  9 ATL      70      1 -0.280           0         0 #> 10 PHI      66      1 -0.364           0         0 #> 11 CAL      98      2  0.413           1         1 #> 12 OAK      95      2  0.109           0         0 #> 13 BOS      92      2  0.126           0         0 #> 14 BAL      90      2 -0.111           0         0 #> 15 NYA      88      2 -0.0105          0         0 #> 16 CLE      81      2  0.102           0         0 #> 17 WS2      68      2 -0.183           0         0 #> 18 MIN      68      2 -0.104           0         0 #> 19 DET      66      2 -0.373           0         0 #> 20 CHA      64      2 -0.326           0         0"},{"path":"https://beanumber.github.io/abdwr3edata/reference/retro2016.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrosheet events data for 2016 — retro2016","title":"Retrosheet events data for 2016 — retro2016","text":"Retrosheet events data 2016","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/retro2016.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrosheet events data for 2016 — retro2016","text":"","code":"retro2016"},{"path":"https://beanumber.github.io/abdwr3edata/reference/retro2016.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Retrosheet events data for 2016 — retro2016","text":"object class baseballr_data (inherits tbl_df, tbl, data.table, data.frame) 190713 rows 98 columns.","code":""},{"path":[]},{"path":"https://beanumber.github.io/abdwr3edata/reference/retro_gl_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrosheet game logs — retro_gl_header","title":"Retrosheet game logs — retro_gl_header","text":"Retrosheet game logs","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/retro_gl_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrosheet game logs — retro_gl_header","text":"","code":"retro_gl_header  retro_gl_2011"},{"path":"https://beanumber.github.io/abdwr3edata/reference/retro_gl_header.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Retrosheet game logs — retro_gl_header","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 0 rows 161 columns. object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 2429 rows 161 columns.","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/retrosheet_add_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Base-Out States on Retrosheet Data — retrosheet_add_states","title":"Compute Base-Out States on Retrosheet Data — retrosheet_add_states","text":"Compute Base-States Retrosheet Data","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/retrosheet_add_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Base-Out States on Retrosheet Data — retrosheet_add_states","text":"","code":"retrosheet_add_states(data, ...)  retrosheet_add_counts(data, ...)"},{"path":"https://beanumber.github.io/abdwr3edata/reference/retrosheet_add_states.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Compute Base-Out States on Retrosheet Data — retrosheet_add_states","text":"https://beanumber.github.io/abdwr3e/05-runsexpectancy.html#sec-runsexpectancy","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/retrosheet_add_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Base-Out States on Retrosheet Data — retrosheet_add_states","text":"data data frame Retrosheet event data generated baseballr::retrosheet_data(). ... currently ignored","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/retrosheet_add_states.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Base-Out States on Retrosheet Data — retrosheet_add_states","text":"tibble nine additional variables provided information beginning ending base-state play. particular state initial state, new_state resulting state.","code":""},{"path":[]},{"path":"https://beanumber.github.io/abdwr3edata/reference/retrosheet_add_states.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Base-Out States on Retrosheet Data — retrosheet_add_states","text":"","code":"if (FALSE) { if (require(baseballr)) {   retro2016 <- baseballr::retrosheet_data(tempdir(), 2016)   events <- retro2016[[1]][[\"events\"]]   events_states <- retrosheet_add_states(events) } }"},{"path":"https://beanumber.github.io/abdwr3edata/reference/ripken_gamelog.html","id":null,"dir":"Reference","previous_headings":"","what":"Ripken's Iron Man game — ripken_gamelog","title":"Ripken's Iron Man game — ripken_gamelog","text":"Ripken's Iron Man game","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/ripken_gamelog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ripken's Iron Man game — ripken_gamelog","text":"","code":"ripken_gamelog"},{"path":"https://beanumber.github.io/abdwr3edata/reference/ripken_gamelog.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ripken's Iron Man game — ripken_gamelog","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 48 rows 2 columns.","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/spahn.html","id":null,"dir":"Reference","previous_headings":"","what":"Warren Spahn — spahn","title":"Warren Spahn — spahn","text":"Warren Spahn","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/spahn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Warren Spahn — spahn","text":"","code":"spahn"},{"path":"https://beanumber.github.io/abdwr3edata/reference/spahn.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Warren Spahn — spahn","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 21 rows 34 columns.","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/statcast_daily.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Statcast data from Baseball Savant — statcast_daily","title":"Download Statcast data from Baseball Savant — statcast_daily","text":"Baseball Savant downloads limited 25,000 rows. functions help build larger database easily.","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/statcast_daily.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Statcast data from Baseball Savant — statcast_daily","text":"","code":"statcast_daily(the_date = lubridate::now(), dir = getwd())  statcast_season(year = lubridate::year(lubridate::now()), dir = getwd())  statcast_read_csv(dir = getwd(), pattern = \"*.csv\")  statcast_write_rds(x, dir = getwd(), ...)"},{"path":"https://beanumber.github.io/abdwr3edata/reference/statcast_daily.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Statcast data from Baseball Savant — statcast_daily","text":"the_date date want download data dir Path directory store downloaded files year year want download data pattern passed base::list.files() x Data frame write. See readr::write_rds(). ... arguments passed readr::write_rds(). Currently ignored.","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/statcast_daily.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Statcast data from Baseball Savant — statcast_daily","text":"Always NULL, file written disk.","code":""},{"path":[]},{"path":"https://beanumber.github.io/abdwr3edata/reference/statcast_daily.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Statcast data from Baseball Savant — statcast_daily","text":"","code":"statcast_daily(\"2023-06-11\", dir = tempdir()) #> Retrieving data from 2023-06-11 #> Error: Can't assign 92 names to a 94-column data.table  x <- statcast_read_csv(tempdir()) x <- statcast_read_csv(tempdir()) statcast_write_rds(x, tempdir()) #> Error in dplyr::group_by(x, year = lubridate::year(game_date)): ℹ In argument: `year = lubridate::year(game_date)`. #> Caused by error: #> ! object 'game_date' not found"},{"path":"https://beanumber.github.io/abdwr3edata/reference/temps_2023.html","id":null,"dir":"Reference","previous_headings":"","what":"Ballparks and temperatures — temps_2023","title":"Ballparks and temperatures — temps_2023","text":"Ballparks temperatures","code":""},{"path":"https://beanumber.github.io/abdwr3edata/reference/temps_2023.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ballparks and temperatures — temps_2023","text":"","code":"temps_2023  parks_2023"},{"path":"https://beanumber.github.io/abdwr3edata/reference/temps_2023.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ballparks and temperatures — temps_2023","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 2199 rows 3 columns. object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 33 rows 2 columns.","code":""}]
